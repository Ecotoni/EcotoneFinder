% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotEcotone.R
\name{CommunityColor}
\alias{CommunityColor}
\title{Tool to assign color to species distribution plots given fuzzy clustering
results.}
\usage{
CommunityColor(
  ecotonefinder,
  method = c("fanny", "vegclust", "cmeans"),
  palette = NULL,
  col = NULL,
  rev = FALSE,
  ...
)
}
\arguments{
\item{ecotonefinder}{A list containing elements named in the same way than
EcotoneFinder function outcomes. Must contain at least one of fanny,
vegclust or cmeans results.}

\item{method}{Which fuzzy clustering to use. Either fanny, vegclust or cmeans.}

\item{palette}{Which palette to use for colour picking. Chosen from the colorspace
package.}

\item{col}{User defined colour scheme. Must be of the same lenght as the
number of fuzzy clusters in the ecotonefinder object. This argument
will overwrite the palette if both are specified.}

\item{rev}{If a palette is chosen, should the order of the colours be
reversed.}

\item{...}{Additional arguments to be passed in the the palette function,
for better control of the colour picking.}
}
\value{
A vector of color names from the palette in the pal argument, of the
  same length and in the same order than the species columns of the provided
  data.
}
\description{
Tool to assign color to species distribution plots given fuzzy clustering
results.
}
\details{
CommunityColor creates a color vector that can be used by plotting
  functions. It assigns colors to species of a community matrix given the
  results of vegclust or cmeans analyses (using cmeans$centers or
  vegclust$mobileCenters). Species are assigned to a color according to the
  cluster centroid for which they have their highest membership value (see
  Bandelj et al., 2012).

  The palette must be one of the 'colorspace' package. Additional arguments
  can be used to improve colour selection. See the 'colorspace'
  package for more details.
}
\examples{
 ######## Artificial dataset & analysis:
 SyntheticTrial <- SyntheticData(SpeciesNum = 27, CommunityNum = 3,
                                 SpCo = NULL, Length = 500,
                                 Parameters = list(a=rep(60, 3),
                                                   b=c(0,250,500),
                                                   c=rep(0.03,3)),
                                 dev.c = .015,
                                 pal = c("#008585", "#FBF2C4", "#C7522B"))

 SyntheticEcoFinder <- EcotoneFinder(SyntheticTrial[,-1],
                                     dist = SyntheticTrial$Distance,
                                     method = "all", groups = 3,
                                     standardize = "hellinger",
                                     diversity = "all")

 ##### Assigning colors to communities:
 SyntheticColor <- CommunityColor(SyntheticEcoFinder, palette = "Berlin",
                   method = "cmeans")

 #### Plotting:
 plotEcotone(data = SyntheticEcoFinder, plot.data = TRUE, plot.method = "none",
             col.data = SyntheticColor)


}
